---
// src/pages/projects/index.astro
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';

const allProjects: CollectionEntry<'projects'>[] = await getCollection('projects');

// Sort all projects by date, newest first.
const sortedProjects = allProjects.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

// Extract all unique tags from the projects for the filter dropdown.
const allTags = allProjects.flatMap(project => project.data.tags);
const uniqueTags: string[] = [...new Set(allTags)];
---
<Layout title="Projects | usrarama">
    <div class="container mx-auto px-4 py-12">
        <!-- Search and Filter Bar -->
        <div class="flex flex-col sm:flex-row gap-4 mb-8">
            <input type="text" id="searchInput" placeholder="Search by title..." class="w-full sm:w-2/3 p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-accent focus:border-transparent outline-none">
            <select id="tagFilter" class="w-full sm:w-1/3 p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-accent focus:border-transparent outline-none">
                <option value="all">All Tags</option>
                {uniqueTags.map(tag => (
                    <option value={tag}>{tag}</option>
                ))}
            </select>
        </div>

        <!-- Responsive Project Grid -->
        <div id="project-grid" class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6">
            {sortedProjects.map(project => (
                <a 
                    href={`/projects/${project.slug}`} 
                    class="project-card block group relative"
                    data-title={project.data.title}
                    data-tags={project.data.tags.join(' ')}
                >
                    <Image
                        src={project.data.thumbnailImage}
                        alt={project.data.title}
                        width={project.data.thumbnailImage.width}
                        height={project.data.thumbnailImage.height}
                        class="w-full h-auto rounded-lg transition-transform duration-300 group-hover:-translate-y-1"
                    />
                    <div class="absolute -bottom-2 left-0 w-full h-sm bg-accent opacity-0 group-hover:opacity-100 scale-x-0 group-hover:scale-x-100 transition-all duration-300 ease-in-out"></div>
                </a>
            ))}
        </div>
    </div>

    <script>
        /**
         * This script provides client-side filtering for the project grid.
         * It listens for input in the search bar and changes in the tag filter,
         * then shows or hides project cards based on whether they match the
         * selected criteria. The project data is read from `data-*` attributes.
         */
        const searchInput = document.getElementById('searchInput') as HTMLInputElement;
        const tagFilter = document.getElementById('tagFilter') as HTMLSelectElement;
        const projectGrid = document.getElementById('project-grid');
        
        if (projectGrid && searchInput && tagFilter) {
            const allCards = Array.from(projectGrid.getElementsByClassName('project-card')) as HTMLElement[];

            const filterProjects = () => {
                const searchTerm = searchInput.value.toLowerCase();
                const selectedTag = tagFilter.value;

                allCards.forEach(card => {
                    const title = card.dataset.title?.toLowerCase() || '';
                    const tags = card.dataset.tags?.toLowerCase() || '';

                    const titleMatch = title.includes(searchTerm);
                    const tagMatch = (selectedTag === 'all' || tags.includes(selectedTag.toLowerCase()));

                    if (titleMatch && tagMatch) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });
            }

            searchInput.addEventListener('input', filterProjects);
            tagFilter.addEventListener('change', filterProjects);
        }
    </script>
</Layout>